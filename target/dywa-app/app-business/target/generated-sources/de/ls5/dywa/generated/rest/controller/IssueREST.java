// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class IssueREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.IssueREST IssueREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.IssueController IssueController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.CommentREST CommentREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.CommentController CommentController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.IssueStateREST IssueStateREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.IssueStateController IssueStateController;

	public long create(final java.lang.String name) {
		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.create(name);
		return obj.getDywaId();
	}

	
	public de.ls5.dywa.generated.rest.types.Issue read_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.Issue result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.Issue.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			de.ls5.dywa.generated.rest.types.EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.Issue readTransient_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.Issue obj) {

		final de.ls5.dywa.generated.rest.types.Issue result;
		
		if (this.objectCache.containsSelective(obj, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.Issue effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.Issue effectiveResult = result;
					if (effectiveObj.iscomments_CommentSet()) {
						final java.util.List<de.ls5.dywa.generated.rest.types.Comment>
						 existing = effectiveObj.getcomments_Comment();
						java.util.List<de.ls5.dywa.generated.rest.types.Comment>
						 newValue;

						newValue = new java.util.ArrayList<>(existing.size());
						for (final de.ls5.dywa.generated.rest.types.Comment e: existing) {
							final de.ls5.dywa.generated.rest.types.Comment fetchedValue;
						
							if (e.getDywaId() > 0) {
								// read_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA
								fetchedValue = this.CommentREST.read_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(e.getDywaId());
							}
							else {
								// readTransient_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA
								fetchedValue = this.CommentREST.readTransient_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(e);
							}
						
							newValue.add(fetchedValue);
						}

						effectiveResult.setcomments_Comment(newValue);
						}
					}
			}

		return result;
	}
	public de.ls5.dywa.generated.rest.types.Issue read_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.Issue result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.Issue.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w")) {
			de.ls5.dywa.generated.rest.types.DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.Issue readTransient_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Issue obj) {

		final de.ls5.dywa.generated.rest.types.Issue result;
		
		if (this.objectCache.containsSelective(obj, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.Issue effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.Issue effectiveResult = result;
					if (effectiveObj.isstateSet()) {
						final de.ls5.dywa.generated.rest.types.IssueState
						 existing = effectiveObj.getstate();
						de.ls5.dywa.generated.rest.types.IssueState
						 newValue;

						if (existing.getDywaId() > 0) {
							// read_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w
							newValue = this.IssueStateREST.read_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w(existing.getDywaId());
						}
						else {
							// readTransient_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w
							newValue = this.IssueStateREST.readTransient_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w(existing);
						}

						effectiveResult.setstate(newValue);
						}
					}
			}

		return result;
	}

		public java.util.Set<de.ls5.dywa.generated.rest.types.Issue> readAll_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.Issue> objs =
			this.IssueController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.Issue> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.Issue s : objs) {
				de.ls5.dywa.generated.rest.types.Issue cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.Issue.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
					de.ls5.dywa.generated.rest.types.EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}
		public java.util.Set<de.ls5.dywa.generated.rest.types.Issue> readAll_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.Issue> objs =
			this.IssueController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.Issue> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.Issue s : objs) {
				de.ls5.dywa.generated.rest.types.Issue cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.Issue.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w")) {
					de.ls5.dywa.generated.rest.types.DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}


	public void update_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.Issue value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(value.getDywaId());
		
		this.update_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(value, obj);
	}

	public void update_EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.Issue value, final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "EditAssignmentIssueSelectivex1x10x10x19x19_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.iscomments_CommentSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Comment>
			 source = effectiveObj.getcomments_Comment();
			final java.util.List<de.ls5.dywa.generated.rest.types.Comment>
			 actual = java.util.Optional.ofNullable(effectiveValue.getcomments_Comment()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Comment item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Comment entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "comments";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = CommentREST.create(dywaName);
					item.setDywaId(id);
				
					//update_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA
					this.CommentREST.update_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(item);
					entity = this.CommentController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.CommentREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA
					this.CommentREST.update_EditAssignmentCommentSelectivex1x10x10x19x19x21x21_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(item);
					entity = this.CommentController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istitleSet()) {
			checkVersion(value, obj);
			effectiveObj.settitle(effectiveValue.gettitle());
		}
	}
	}
	public void update_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Issue value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(value.getDywaId());
		
		this.update_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(value, obj);
	}

	public void update_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Issue value, final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istitleSet()) {
			checkVersion(value, obj);
			effectiveObj.settitle(effectiveValue.gettitle());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isstateSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getstate() == null) {
				effectiveObj.setstate(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.IssueState
				 entity;
				final de.ls5.dywa.generated.rest.types.IssueState
				 item = effectiveValue.getstate();
			
				//update_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w
				this.IssueStateREST.update_DiscussionTableIssueStateSelectivex1x2x2_UOyxYVN9Ee2KQc5QIsW97w(item);
				
				entity = this.IssueStateController.read(item.getDywaId());
			
				effectiveObj.setstate(entity);
			
			}
		}
	}
	}
	public void update_IssueSelective(final de.ls5.dywa.generated.rest.types.Issue value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(value.getDywaId());
		
		this.update_IssueSelective(value, obj);
	}

	public void update_IssueSelective(final de.ls5.dywa.generated.rest.types.Issue value, final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "IssueSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "IssueSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.iscomments_CommentSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Comment>
			 source = effectiveObj.getcomments_Comment();
			final java.util.List<de.ls5.dywa.generated.rest.types.Comment>
			 actual = java.util.Optional.ofNullable(effectiveValue.getcomments_Comment()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Comment item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Comment entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "comments";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = CommentREST.create(dywaName);
					item.setDywaId(id);
				
					//update_CommentSelective
					this.CommentREST.update_CommentSelective(item);
					entity = this.CommentController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.CommentREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_CommentSelective
					this.CommentREST.update_CommentSelective(item);
					entity = this.CommentController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isstateSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getstate() == null) {
				effectiveObj.setstate(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.IssueState
				 entity;
				final de.ls5.dywa.generated.rest.types.IssueState
				 item = effectiveValue.getstate();
			
				//update_IssueStateSelective
				this.IssueStateREST.update_IssueStateSelective(item);
				
				entity = this.IssueStateController.read(item.getDywaId());
			
				effectiveObj.setstate(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istitleSet()) {
			checkVersion(value, obj);
			effectiveObj.settitle(effectiveValue.gettitle());
		}
	}
	}

	public de.ls5.dywa.generated.entity.onbroke.models.app.Issue copyToTransient(final de.ls5.dywa.generated.rest.types.Issue value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj;

		if (this.objectCache.containsTransient(value)) {
			return this.objectCache.getTransient(value);
		}
		else {
			final java.lang.String name;
			if (value.getDywaName() == null || value.getDywaName().isEmpty()) {
				name = "Issue_transient";
			} else {
				name = value.getDywaName();
			}
			obj = IssueController.createTransient(name);
			this.objectCache.putTransient(value, obj);
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

			{
				final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.iscomments_CommentSet()) {
				checkVersion(value, obj);

				final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Comment>
				 source = effectiveObj.getcomments_Comment();
				final java.util.List<de.ls5.dywa.generated.rest.types.Comment>
				 actual = java.util.Optional.ofNullable(effectiveValue.getcomments_Comment()).orElseGet(java.util.Collections::emptyList);

				for (final de.ls5.dywa.generated.rest.types.Comment item : actual) {

					final de.ls5.dywa.generated.entity.onbroke.models.app.Comment entity;

					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "comments";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = CommentREST.create(dywaName);
						item.setDywaId(id);
					
						//update_CommentSelective
						this.CommentREST.update_CommentSelective(item);
						entity = this.CommentController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.CommentREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_CommentSelective
						this.CommentREST.update_CommentSelective(item);
						entity = this.CommentController.read(item.getDywaId());
					}

					if (entity != null) {
						source.add(entity);
					}
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isstateSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getstate() == null) {
					effectiveObj.setstate(null);
				}
				else {
					final de.ls5.dywa.generated.entity.onbroke.models.app.IssueState
					 entity;
					final de.ls5.dywa.generated.rest.types.IssueState
					 item = effectiveValue.getstate();
				
					//update_IssueStateSelective
					this.IssueStateREST.update_IssueStateSelective(item);
					
					entity = this.IssueStateController.read(item.getDywaId());
				
					effectiveObj.setstate(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.Issue effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.Issue effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.istitleSet()) {
				checkVersion(value, obj);
				effectiveObj.settitle(effectiveValue.gettitle());
			}
		}

		return obj;
	}

	public void delete(final long id) {
		final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj = this.IssueController.read(id);
		this.IssueController.delete(obj);
	}

	private void checkVersion(final de.ls5.dywa.generated.rest.types.Issue value, final de.ls5.dywa.generated.entity.onbroke.models.app.Issue obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
