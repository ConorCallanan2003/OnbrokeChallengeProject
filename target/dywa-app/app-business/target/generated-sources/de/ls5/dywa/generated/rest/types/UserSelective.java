// generated by SelectiveGenerator#generateFullSelective(ComplexTypeView view)
package de.ls5.dywa.generated.rest.types;

public class UserSelective {

	public static void copy(
		final de.ls5.dywa.generated.entity.onbroke.models.app.User from,
		final de.ls5.dywa.generated.rest.types.User to,
		final info.scce.dime.rest.ObjectCache objectCache) {


		if (objectCache.containsSelective(to, "UserSelective")) {
			return;
		}

		to.setDywaId(from.getDywaId());

		// put to cache, after id has been set
		objectCache.putSelective(to, "UserSelective");

		// non-transient objects can be fetched completely from the DB
		if (from.getDywaId() > info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
			return;
		}

		to.setDywaVersion(from.getDywaVersion());
		to.setDywaName(from.getDywaName());

		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final de.ls5.dywa.generated.entity.onbroke.models.app.BaseUser
		 source = effectiveFrom.getbaseUser();
		if (source != null) {
			// original selective: BaseUserSelective
			de.ls5.dywa.generated.rest.types.BaseUser cached = objectCache.getRestTo(source);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.BaseUser.fromDywaEntity(source, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "BaseUserSelective")) {
				de.ls5.dywa.generated.rest.types.BaseUserSelective.copy(source, cached, objectCache);
			}
		
			effectiveTo.setbaseUser(cached);
		}
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final de.ls5.dywa.generated.entity.onbroke.models.app.UserRole
		 source = effectiveFrom.getrole();
		if (source != null) {
			// original selective: UserRoleSelective
			de.ls5.dywa.generated.rest.types.UserRole cached = objectCache.getRestTo(source);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.UserRole.fromDywaEntity(source, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "UserRoleSelective")) {
				de.ls5.dywa.generated.rest.types.UserRoleSelective.copy(source, cached, objectCache);
			}
		
			effectiveTo.setrole(cached);
		}
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Offer>
		 source = effectiveFrom.getoffers_Offer();
		final java.util.List<de.ls5.dywa.generated.rest.types.Offer>
		 target = new java.util.ArrayList<>(source.size());
		
		for (final de.ls5.dywa.generated.entity.onbroke.models.app.Offer
		 s : source) {
			// original selective: OfferSelective
			de.ls5.dywa.generated.rest.types.Offer cached = objectCache.getRestTo(s);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.Offer.fromDywaEntity(s, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "OfferSelective")) {
				de.ls5.dywa.generated.rest.types.OfferSelective.copy(s, cached, objectCache);
			}
		
			target.add(cached);
		}
		
		effectiveTo.setoffers_Offer(target);
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Bidding>
		 source = effectiveFrom.getbiddings_Bidding();
		final java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
		 target = new java.util.ArrayList<>(source.size());
		
		for (final de.ls5.dywa.generated.entity.onbroke.models.app.Bidding
		 s : source) {
			// original selective: BiddingSelective
			de.ls5.dywa.generated.rest.types.Bidding cached = objectCache.getRestTo(s);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.Bidding.fromDywaEntity(s, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "BiddingSelective")) {
				de.ls5.dywa.generated.rest.types.BiddingSelective.copy(s, cached, objectCache);
			}
		
			target.add(cached);
		}
		
		effectiveTo.setbiddings_Bidding(target);
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final de.ls5.dywa.generated.entity.onbroke.models.app.Comment
		 source = effectiveFrom.getcomment();
		if (source != null) {
			// original selective: CommentSelective
			de.ls5.dywa.generated.rest.types.Comment cached = objectCache.getRestTo(source);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.Comment.fromDywaEntity(source, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "CommentSelective")) {
				de.ls5.dywa.generated.rest.types.CommentSelective.copy(source, cached, objectCache);
			}
		
			effectiveTo.setcomment(cached);
		}
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		final de.ls5.dywa.generated.entity.onbroke.models.app.User
		 source = effectiveFrom.getdywaSwitchedTo();
		if (source != null) {
			// original selective: UserSelective
			de.ls5.dywa.generated.rest.types.User cached = objectCache.getRestTo(source);
			
			if (cached == null) {
				cached = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(source, objectCache);
			}
			
			if (!objectCache.containsSelective(cached, "UserSelective")) {
				de.ls5.dywa.generated.rest.types.UserSelective.copy(source, cached, objectCache);
			}
		
			effectiveTo.setdywaSwitchedTo(cached);
		}
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		effectiveTo.setfirstName(effectiveFrom.getfirstName());
		}
		{
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveFrom = from;
			final de.ls5.dywa.generated.rest.types.User effectiveTo = to;
		effectiveTo.setlastName(effectiveFrom.getlastName());
		}
	}
}
