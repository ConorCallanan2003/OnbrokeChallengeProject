// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class UserREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.UserREST UserREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.UserController UserController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.UserRoleREST UserRoleREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.UserRoleController UserRoleController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.OfferREST OfferREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.OfferController OfferController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.BiddingREST BiddingREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.BiddingController BiddingController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.BaseUserREST BaseUserREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.BaseUserController BaseUserController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.CommentREST CommentREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.CommentController CommentController;

	public long create(final java.lang.String name) {
		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.create(name);
		return obj.getDywaId();
	}

	
	public de.ls5.dywa.generated.rest.types.User read_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.User result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			de.ls5.dywa.generated.rest.types.EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.User readTransient_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.User obj) {

		final de.ls5.dywa.generated.rest.types.User result;
		
		if (this.objectCache.containsSelective(obj, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA");
		}

		// Update references to persistent objects

		return result;
	}
	public de.ls5.dywa.generated.rest.types.User read_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.User result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q")) {
			de.ls5.dywa.generated.rest.types.AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.User readTransient_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q(final de.ls5.dywa.generated.rest.types.User obj) {

		final de.ls5.dywa.generated.rest.types.User result;
		
		if (this.objectCache.containsSelective(obj, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.User effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.User effectiveResult = result;
					if (effectiveObj.isroleSet()) {
						final de.ls5.dywa.generated.rest.types.UserRole
						 existing = effectiveObj.getrole();
						de.ls5.dywa.generated.rest.types.UserRole
						 newValue;

						if (existing.getDywaId() > 0) {
							// read_AdminOverviewTabUserRoleSelectivex1x3_8iqPUVLkEe2djpkPxa2Z3Q
							newValue = this.UserRoleREST.read_UserFormUserRoleSelectivex4_BDkd8F3WEe2t19MJLPzxmg(existing.getDywaId());
						}
						else {
							// readTransient_AdminOverviewTabUserRoleSelectivex1x3_8iqPUVLkEe2djpkPxa2Z3Q
							newValue = this.UserRoleREST.readTransient_UserFormUserRoleSelectivex4_BDkd8F3WEe2t19MJLPzxmg(existing);
						}

						effectiveResult.setrole(newValue);
						}
					}
			}

		return result;
	}
	public de.ls5.dywa.generated.rest.types.User read_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.User result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w")) {
			de.ls5.dywa.generated.rest.types.UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.User readTransient_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w(final de.ls5.dywa.generated.rest.types.User obj) {

		final de.ls5.dywa.generated.rest.types.User result;
		
		if (this.objectCache.containsSelective(obj, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.User effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.User effectiveResult = result;
					if (effectiveObj.isoffers_OfferSet()) {
						final java.util.List<de.ls5.dywa.generated.rest.types.Offer>
						 existing = effectiveObj.getoffers_Offer();
						java.util.List<de.ls5.dywa.generated.rest.types.Offer>
						 newValue;

						newValue = new java.util.ArrayList<>(existing.size());
						for (final de.ls5.dywa.generated.rest.types.Offer e: existing) {
							final de.ls5.dywa.generated.rest.types.Offer fetchedValue;
						
							if (e.getDywaId() > 0) {
								// read_UserAreaOfferSelectivex1x1x1_jIfqkVFOEe2J0bu3ffrh5w
								fetchedValue = this.OfferREST.read_AdminBiddingTableOfferSelectivex1x1x1_QIJywVLmEe2djpkPxa2Z3Q(e.getDywaId());
							}
							else {
								// readTransient_UserAreaOfferSelectivex1x1x1_jIfqkVFOEe2J0bu3ffrh5w
								fetchedValue = this.OfferREST.readTransient_AdminBiddingTableOfferSelectivex1x1x1_QIJywVLmEe2djpkPxa2Z3Q(e);
							}
						
							newValue.add(fetchedValue);
						}

						effectiveResult.setoffers_Offer(newValue);
						}
					}
			}
			{
				{
					final de.ls5.dywa.generated.rest.types.User effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.User effectiveResult = result;
					if (effectiveObj.isbiddings_BiddingSet()) {
						final java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
						 existing = effectiveObj.getbiddings_Bidding();
						java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
						 newValue;

						newValue = new java.util.ArrayList<>(existing.size());
						for (final de.ls5.dywa.generated.rest.types.Bidding e: existing) {
							final de.ls5.dywa.generated.rest.types.Bidding fetchedValue;
						
							if (e.getDywaId() > 0) {
								// read_UserAreaBiddingSelectivex1x2x2_jIfqkVFOEe2J0bu3ffrh5w
								fetchedValue = this.BiddingREST.read_UserBiddingTableBiddingSelectivex1_uSTQkVFOEe2J0bu3ffrh5w(e.getDywaId());
							}
							else {
								// readTransient_UserAreaBiddingSelectivex1x2x2_jIfqkVFOEe2J0bu3ffrh5w
								fetchedValue = this.BiddingREST.readTransient_UserBiddingTableBiddingSelectivex1_uSTQkVFOEe2J0bu3ffrh5w(e);
							}
						
							newValue.add(fetchedValue);
						}

						effectiveResult.setbiddings_Bidding(newValue);
						}
					}
			}

		return result;
	}

		public java.util.Set<de.ls5.dywa.generated.rest.types.User> readAll_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.User> objs =
			this.UserController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.User> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.User s : objs) {
				de.ls5.dywa.generated.rest.types.User cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
					de.ls5.dywa.generated.rest.types.EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}
		public java.util.Set<de.ls5.dywa.generated.rest.types.User> readAll_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.User> objs =
			this.UserController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.User> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.User s : objs) {
				de.ls5.dywa.generated.rest.types.User cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q")) {
					de.ls5.dywa.generated.rest.types.AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}
		public java.util.Set<de.ls5.dywa.generated.rest.types.User> readAll_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.User> objs =
			this.UserController.fetch();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.User> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.User s : objs) {
				de.ls5.dywa.generated.rest.types.User cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.User.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w")) {
					de.ls5.dywa.generated.rest.types.UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}


	public void update_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.User value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(value.getDywaId());
		
		this.update_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(value, obj);
	}

	public void update_EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA(final de.ls5.dywa.generated.rest.types.User value, final de.ls5.dywa.generated.entity.onbroke.models.app.User obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "EditAssignmentUserSelectivex1x12x12x19x19x2x2_mOjJMVuZEe2C__HYPHEN_MINUS__dvY0XUmpA");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isfirstNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setfirstName(effectiveValue.getfirstName());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.islastNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setlastName(effectiveValue.getlastName());
		}
	}
	}
	public void update_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q(final de.ls5.dywa.generated.rest.types.User value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(value.getDywaId());
		
		this.update_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q(value, obj);
	}

	public void update_AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q(final de.ls5.dywa.generated.rest.types.User value, final de.ls5.dywa.generated.entity.onbroke.models.app.User obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "AdminOverviewTabUserSelectivex1_8iqPUVLkEe2djpkPxa2Z3Q");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isfirstNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setfirstName(effectiveValue.getfirstName());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.islastNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setlastName(effectiveValue.getlastName());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isroleSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getrole() == null) {
				effectiveObj.setrole(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.UserRole
				 entity;
				final de.ls5.dywa.generated.rest.types.UserRole
				 item = effectiveValue.getrole();
			
				//update_AdminOverviewTabUserRoleSelectivex1x3_8iqPUVLkEe2djpkPxa2Z3Q
				this.UserRoleREST.update_UserFormUserRoleSelectivex4_BDkd8F3WEe2t19MJLPzxmg(item);
				
				entity = this.UserRoleController.read(item.getDywaId());
			
				effectiveObj.setrole(entity);
			
			}
		}
	}
	}
	public void update_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w(final de.ls5.dywa.generated.rest.types.User value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(value.getDywaId());
		
		this.update_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w(value, obj);
	}

	public void update_UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w(final de.ls5.dywa.generated.rest.types.User value, final de.ls5.dywa.generated.entity.onbroke.models.app.User obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "UserAreaUserSelectivex1_jIfqkVFOEe2J0bu3ffrh5w");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isoffers_OfferSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Offer>
			 source = effectiveObj.getoffers_Offer();
			final java.util.List<de.ls5.dywa.generated.rest.types.Offer>
			 actual = java.util.Optional.ofNullable(effectiveValue.getoffers_Offer()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Offer item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Offer entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "offers";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = OfferREST.create(dywaName);
					item.setDywaId(id);
				
					//update_UserAreaOfferSelectivex1x1x1_jIfqkVFOEe2J0bu3ffrh5w
					this.OfferREST.update_AdminBiddingTableOfferSelectivex1x1x1_QIJywVLmEe2djpkPxa2Z3Q(item);
					entity = this.OfferController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.OfferREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_UserAreaOfferSelectivex1x1x1_jIfqkVFOEe2J0bu3ffrh5w
					this.OfferREST.update_AdminBiddingTableOfferSelectivex1x1x1_QIJywVLmEe2djpkPxa2Z3Q(item);
					entity = this.OfferController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isbiddings_BiddingSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Bidding>
			 source = effectiveObj.getbiddings_Bidding();
			final java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
			 actual = java.util.Optional.ofNullable(effectiveValue.getbiddings_Bidding()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Bidding item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Bidding entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "biddings";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = BiddingREST.create(dywaName);
					item.setDywaId(id);
				
					//update_UserAreaBiddingSelectivex1x2x2_jIfqkVFOEe2J0bu3ffrh5w
					this.BiddingREST.update_UserBiddingTableBiddingSelectivex1_uSTQkVFOEe2J0bu3ffrh5w(item);
					entity = this.BiddingController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.BiddingREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_UserAreaBiddingSelectivex1x2x2_jIfqkVFOEe2J0bu3ffrh5w
					this.BiddingREST.update_UserBiddingTableBiddingSelectivex1_uSTQkVFOEe2J0bu3ffrh5w(item);
					entity = this.BiddingController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
	}
	public void update_UserSelective(final de.ls5.dywa.generated.rest.types.User value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(value.getDywaId());
		
		this.update_UserSelective(value, obj);
	}

	public void update_UserSelective(final de.ls5.dywa.generated.rest.types.User value, final de.ls5.dywa.generated.entity.onbroke.models.app.User obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "UserSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "UserSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isbaseUserSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getbaseUser() == null) {
				effectiveObj.setbaseUser(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.BaseUser
				 entity;
				final de.ls5.dywa.generated.rest.types.BaseUser
				 item = effectiveValue.getbaseUser();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "baseUser";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = BaseUserREST.create(dywaName);
					item.setDywaId(id);
				
					//update_BaseUserSelective
					this.BaseUserREST.update_BaseUserSelective(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.BaseUserREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_BaseUserSelective
					this.BaseUserREST.update_BaseUserSelective(item);
					entity = this.BaseUserController.read(item.getDywaId());
				}
			
				effectiveObj.setbaseUser(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isroleSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getrole() == null) {
				effectiveObj.setrole(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.UserRole
				 entity;
				final de.ls5.dywa.generated.rest.types.UserRole
				 item = effectiveValue.getrole();
			
				//update_UserRoleSelective
				this.UserRoleREST.update_UserRoleSelective(item);
				
				entity = this.UserRoleController.read(item.getDywaId());
			
				effectiveObj.setrole(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isoffers_OfferSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Offer>
			 source = effectiveObj.getoffers_Offer();
			final java.util.List<de.ls5.dywa.generated.rest.types.Offer>
			 actual = java.util.Optional.ofNullable(effectiveValue.getoffers_Offer()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Offer item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Offer entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "offers";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = OfferREST.create(dywaName);
					item.setDywaId(id);
				
					//update_OfferSelective
					this.OfferREST.update_OfferSelective(item);
					entity = this.OfferController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.OfferREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_OfferSelective
					this.OfferREST.update_OfferSelective(item);
					entity = this.OfferController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isbiddings_BiddingSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Bidding>
			 source = effectiveObj.getbiddings_Bidding();
			final java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
			 actual = java.util.Optional.ofNullable(effectiveValue.getbiddings_Bidding()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Bidding item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Bidding entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "biddings";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = BiddingREST.create(dywaName);
					item.setDywaId(id);
				
					//update_BiddingSelective
					this.BiddingREST.update_BiddingSelective(item);
					entity = this.BiddingController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.BiddingREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_BiddingSelective
					this.BiddingREST.update_BiddingSelective(item);
					entity = this.BiddingController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.iscommentSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getcomment() == null) {
				effectiveObj.setcomment(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.Comment
				 entity;
				final de.ls5.dywa.generated.rest.types.Comment
				 item = effectiveValue.getcomment();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "comment";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = CommentREST.create(dywaName);
					item.setDywaId(id);
				
					//update_CommentSelective
					this.CommentREST.update_CommentSelective(item);
					entity = this.CommentController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.CommentREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_CommentSelective
					this.CommentREST.update_CommentSelective(item);
					entity = this.CommentController.read(item.getDywaId());
				}
			
				effectiveObj.setcomment(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isdywaSwitchedToSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getdywaSwitchedTo() == null) {
				effectiveObj.setdywaSwitchedTo(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.User
				 entity;
				final de.ls5.dywa.generated.rest.types.User
				 item = effectiveValue.getdywaSwitchedTo();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.User)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "dywaSwitchedTo";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = UserREST.create(dywaName);
					item.setDywaId(id);
				
					//update_UserSelective
					this.UserREST.update_UserSelective(item);
					entity = this.UserController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.User)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.UserREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_UserSelective
					this.UserREST.update_UserSelective(item);
					entity = this.UserController.read(item.getDywaId());
				}
			
				effectiveObj.setdywaSwitchedTo(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isfirstNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setfirstName(effectiveValue.getfirstName());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.islastNameSet()) {
			checkVersion(value, obj);
			effectiveObj.setlastName(effectiveValue.getlastName());
		}
	}
	}

	public de.ls5.dywa.generated.entity.onbroke.models.app.User copyToTransient(final de.ls5.dywa.generated.rest.types.User value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj;

		if (this.objectCache.containsTransient(value)) {
			return this.objectCache.getTransient(value);
		}
		else {
			final java.lang.String name;
			if (value.getDywaName() == null || value.getDywaName().isEmpty()) {
				name = "User_transient";
			} else {
				name = value.getDywaName();
			}
			obj = UserController.createTransient(name);
			this.objectCache.putTransient(value, obj);
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isbaseUserSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getbaseUser() == null) {
					effectiveObj.setbaseUser(null);
				}
				else {
					final de.ls5.dywa.generated.entity.onbroke.models.app.BaseUser
					 entity;
					final de.ls5.dywa.generated.rest.types.BaseUser
					 item = effectiveValue.getbaseUser();
				
					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "baseUser";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = BaseUserREST.create(dywaName);
						item.setDywaId(id);
					
						//update_BaseUserSelective
						this.BaseUserREST.update_BaseUserSelective(item);
						entity = this.BaseUserController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.BaseUser)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.BaseUserREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_BaseUserSelective
						this.BaseUserREST.update_BaseUserSelective(item);
						entity = this.BaseUserController.read(item.getDywaId());
					}
				
					effectiveObj.setbaseUser(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isroleSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getrole() == null) {
					effectiveObj.setrole(null);
				}
				else {
					final de.ls5.dywa.generated.entity.onbroke.models.app.UserRole
					 entity;
					final de.ls5.dywa.generated.rest.types.UserRole
					 item = effectiveValue.getrole();
				
					//update_UserRoleSelective
					this.UserRoleREST.update_UserRoleSelective(item);
					
					entity = this.UserRoleController.read(item.getDywaId());
				
					effectiveObj.setrole(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isoffers_OfferSet()) {
				checkVersion(value, obj);

				final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Offer>
				 source = effectiveObj.getoffers_Offer();
				final java.util.List<de.ls5.dywa.generated.rest.types.Offer>
				 actual = java.util.Optional.ofNullable(effectiveValue.getoffers_Offer()).orElseGet(java.util.Collections::emptyList);

				for (final de.ls5.dywa.generated.rest.types.Offer item : actual) {

					final de.ls5.dywa.generated.entity.onbroke.models.app.Offer entity;

					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "offers";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = OfferREST.create(dywaName);
						item.setDywaId(id);
					
						//update_OfferSelective
						this.OfferREST.update_OfferSelective(item);
						entity = this.OfferController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Offer)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.OfferREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_OfferSelective
						this.OfferREST.update_OfferSelective(item);
						entity = this.OfferController.read(item.getDywaId());
					}

					if (entity != null) {
						source.add(entity);
					}
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isbiddings_BiddingSet()) {
				checkVersion(value, obj);

				final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Bidding>
				 source = effectiveObj.getbiddings_Bidding();
				final java.util.List<de.ls5.dywa.generated.rest.types.Bidding>
				 actual = java.util.Optional.ofNullable(effectiveValue.getbiddings_Bidding()).orElseGet(java.util.Collections::emptyList);

				for (final de.ls5.dywa.generated.rest.types.Bidding item : actual) {

					final de.ls5.dywa.generated.entity.onbroke.models.app.Bidding entity;

					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "biddings";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = BiddingREST.create(dywaName);
						item.setDywaId(id);
					
						//update_BiddingSelective
						this.BiddingREST.update_BiddingSelective(item);
						entity = this.BiddingController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Bidding)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.BiddingREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_BiddingSelective
						this.BiddingREST.update_BiddingSelective(item);
						entity = this.BiddingController.read(item.getDywaId());
					}

					if (entity != null) {
						source.add(entity);
					}
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.iscommentSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getcomment() == null) {
					effectiveObj.setcomment(null);
				}
				else {
					final de.ls5.dywa.generated.entity.onbroke.models.app.Comment
					 entity;
					final de.ls5.dywa.generated.rest.types.Comment
					 item = effectiveValue.getcomment();
				
					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "comment";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = CommentREST.create(dywaName);
						item.setDywaId(id);
					
						//update_CommentSelective
						this.CommentREST.update_CommentSelective(item);
						entity = this.CommentController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.Comment)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.CommentREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_CommentSelective
						this.CommentREST.update_CommentSelective(item);
						entity = this.CommentController.read(item.getDywaId());
					}
				
					effectiveObj.setcomment(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isdywaSwitchedToSet()) {
				checkVersion(value, obj);
				if (effectiveValue.getdywaSwitchedTo() == null) {
					effectiveObj.setdywaSwitchedTo(null);
				}
				else {
					final de.ls5.dywa.generated.entity.onbroke.models.app.User
					 entity;
					final de.ls5.dywa.generated.rest.types.User
					 item = effectiveValue.getdywaSwitchedTo();
				
					// create new
					if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.User)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						final java.lang.String dywaName;
						if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
							dywaName = "dywaSwitchedTo";
						} else {
							dywaName = item.getDywaName();
						}
					
						final long id = UserREST.create(dywaName);
						item.setDywaId(id);
					
						//update_UserSelective
						this.UserREST.update_UserSelective(item);
						entity = this.UserController.read(item.getDywaId());
					}
					// create transient
					else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
						if (! (item instanceof de.ls5.dywa.generated.rest.types.User)) {
							throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
						}
					
						entity = this.UserREST.copyToTransient(item);
					}
					// lookup regular object
					else {
						//update_UserSelective
						this.UserREST.update_UserSelective(item);
						entity = this.UserController.read(item.getDywaId());
					}
				
					effectiveObj.setdywaSwitchedTo(entity);
				
				}
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.isfirstNameSet()) {
				checkVersion(value, obj);
				effectiveObj.setfirstName(effectiveValue.getfirstName());
			}
		}
			{
				final de.ls5.dywa.generated.rest.types.User effectiveValue = value;
				final de.ls5.dywa.generated.entity.onbroke.models.app.User effectiveObj = obj;

			// If values were not specified, ignore them
			if (effectiveValue.islastNameSet()) {
				checkVersion(value, obj);
				effectiveObj.setlastName(effectiveValue.getlastName());
			}
		}

		return obj;
	}

	public void delete(final long id) {
		final de.ls5.dywa.generated.entity.onbroke.models.app.User obj = this.UserController.read(id);
		this.UserController.delete(obj);
	}

	private void checkVersion(final de.ls5.dywa.generated.rest.types.User value, final de.ls5.dywa.generated.entity.onbroke.models.app.User obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
