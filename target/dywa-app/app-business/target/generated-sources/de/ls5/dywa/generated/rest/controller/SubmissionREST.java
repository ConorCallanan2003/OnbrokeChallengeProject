// generated by info.scce.dime.generator.rest.SelectiveControllerGenerator
package de.ls5.dywa.generated.rest.controller;

@javax.transaction.Transactional
@javax.enterprise.context.RequestScoped
public class SubmissionREST {

	@javax.inject.Inject
	private info.scce.dime.rest.ObjectCache objectCache;
	@javax.inject.Inject
	private de.ls5.dywa.generated.util.DomainFileController DomainFileController;
	
	
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.SubmissionREST SubmissionREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.SubmissionController SubmissionController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.IssueREST IssueREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.IssueController IssueController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.ReportREST ReportREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.ReportController ReportController;
	@javax.inject.Inject
	private de.ls5.dywa.generated.rest.controller.DecisionREST DecisionREST;
	@javax.inject.Inject
	private de.ls5.dywa.generated.controller.onbroke.models.app.DecisionController DecisionController;


	
	public de.ls5.dywa.generated.rest.types.Submission read_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w(final long id) {
		
		final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj = this.SubmissionController.read(id);
		
		if (obj == null) {
			return null;
		}

		de.ls5.dywa.generated.rest.types.Submission result = objectCache.getRestTo(obj);
		
		if (result == null) {
			result = de.ls5.dywa.generated.rest.types.Submission.fromDywaEntity(obj, objectCache);
		}
		
		if (!objectCache.containsSelective(result, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w")) {
			de.ls5.dywa.generated.rest.types.DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w.copy(obj, result, objectCache);
		}

		return result;
	}

	public de.ls5.dywa.generated.rest.types.Submission readTransient_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Submission obj) {

		final de.ls5.dywa.generated.rest.types.Submission result;
		
		if (this.objectCache.containsSelective(obj, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w")) {
			return obj;
		}
		else {
			result = obj;
			this.objectCache.putSelective(obj, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w");
		}

		// Update references to persistent objects
			{
				{
					final de.ls5.dywa.generated.rest.types.Submission effectiveObj = obj;
					final de.ls5.dywa.generated.rest.types.Submission effectiveResult = result;
					if (effectiveObj.isissues_IssueSet()) {
						final java.util.List<de.ls5.dywa.generated.rest.types.Issue>
						 existing = effectiveObj.getissues_Issue();
						java.util.List<de.ls5.dywa.generated.rest.types.Issue>
						 newValue;

						newValue = new java.util.ArrayList<>(existing.size());
						for (final de.ls5.dywa.generated.rest.types.Issue e: existing) {
							final de.ls5.dywa.generated.rest.types.Issue fetchedValue;
						
							if (e.getDywaId() > 0) {
								// read_DiscussionPanelContentIssueSelectivex1x2x2_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w
								fetchedValue = this.IssueREST.read_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(e.getDywaId());
							}
							else {
								// readTransient_DiscussionPanelContentIssueSelectivex1x2x2_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w
								fetchedValue = this.IssueREST.readTransient_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(e);
							}
						
							newValue.add(fetchedValue);
						}

						effectiveResult.setissues_Issue(newValue);
						}
					}
			}

		return result;
	}

		public java.util.Set<de.ls5.dywa.generated.rest.types.Submission> readAll_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w() {
			
			final java.util.Set<de.ls5.dywa.generated.entity.onbroke.models.app.Submission> objs =
			this.SubmissionController.fetchWithSubtypes();
	
			final java.util.Set<de.ls5.dywa.generated.rest.types.Submission> result = new java.util.HashSet<>();

			for (final de.ls5.dywa.generated.entity.onbroke.models.app.Submission s : objs) {
				de.ls5.dywa.generated.rest.types.Submission cached = objectCache.getRestTo(s);
				
				if (cached == null) {
					cached = de.ls5.dywa.generated.rest.types.Submission.fromDywaEntity(s, objectCache);
				}
				
				if (!objectCache.containsSelective(cached, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w")) {
					de.ls5.dywa.generated.rest.types.DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w.copy(s, cached, objectCache);
				}

				result.add(cached);
			}
			
			return result;
		}


	public void update_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Submission value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj = this.SubmissionController.read(value.getDywaId());
		
		this.update_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w(value, obj);
	}

	public void update_DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w(final de.ls5.dywa.generated.rest.types.Submission value, final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "DiscussionPanelContentSubmissionSelectivex1_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isuserCanDiscussSet()) {
			checkVersion(value, obj);
			effectiveObj.setuserCanDiscuss(effectiveValue.getuserCanDiscuss());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isissues_IssueSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Issue>
			 source = effectiveObj.getissues_Issue();
			final java.util.List<de.ls5.dywa.generated.rest.types.Issue>
			 actual = java.util.Optional.ofNullable(effectiveValue.getissues_Issue()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Issue item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Issue entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Issue)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "issues";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = IssueREST.create(dywaName);
					item.setDywaId(id);
				
					//update_DiscussionPanelContentIssueSelectivex1x2x2_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w
					this.IssueREST.update_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(item);
					entity = this.IssueController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Issue)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.IssueREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_DiscussionPanelContentIssueSelectivex1x2x2_cA__HYPHEN_MINUS__CgVOkEe2KQc5QIsW97w
					this.IssueREST.update_DiscussionTableIssueSelectivex1_UOyxYVN9Ee2KQc5QIsW97w(item);
					entity = this.IssueController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
	}
	public void update_SubmissionSelective(final de.ls5.dywa.generated.rest.types.Submission value) {

		final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj = this.SubmissionController.read(value.getDywaId());
		
		this.update_SubmissionSelective(value, obj);
	}

	public void update_SubmissionSelective(final de.ls5.dywa.generated.rest.types.Submission value, final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj) {

		// for updates, consider a special selective so we don't clash with read-operations
		if (this.objectCache.containsSelective(obj, "SubmissionSelective")) {
			// We are already getting updated by someone else
			return;
		}
		else {
			// we don't care for the actual value. key alone is sufficient enough for detection of cycles
			this.objectCache.putSelective(obj, "SubmissionSelective");
		}

		if (value.isDywaNameSet()) {
			obj.setDywaName(value.getDywaName());
		}

		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isreportSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getreport() == null) {
				effectiveObj.setreport(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.Report
				 entity;
				final de.ls5.dywa.generated.rest.types.Report
				 item = effectiveValue.getreport();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Report)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "report";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = ReportREST.create(dywaName);
					item.setDywaId(id);
				
					//update_ReportSelective
					this.ReportREST.update_ReportSelective(item);
					entity = this.ReportController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Report)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.ReportREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_ReportSelective
					this.ReportREST.update_ReportSelective(item);
					entity = this.ReportController.read(item.getDywaId());
				}
			
				effectiveObj.setreport(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isdecisionSet()) {
			checkVersion(value, obj);
			if (effectiveValue.getdecision() == null) {
				effectiveObj.setdecision(null);
			}
			else {
				final de.ls5.dywa.generated.entity.onbroke.models.app.Decision
				 entity;
				final de.ls5.dywa.generated.rest.types.Decision
				 item = effectiveValue.getdecision();
			
				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Decision)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "decision";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = DecisionREST.create(dywaName);
					item.setDywaId(id);
				
					//update_DecisionSelective
					this.DecisionREST.update_DecisionSelective(item);
					entity = this.DecisionController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Decision)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.DecisionREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_DecisionSelective
					this.DecisionREST.update_DecisionSelective(item);
					entity = this.DecisionController.read(item.getDywaId());
				}
			
				effectiveObj.setdecision(entity);
			
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isissues_IssueSet()) {
			checkVersion(value, obj);
			final java.util.List<de.ls5.dywa.generated.entity.onbroke.models.app.Issue>
			 source = effectiveObj.getissues_Issue();
			final java.util.List<de.ls5.dywa.generated.rest.types.Issue>
			 actual = java.util.Optional.ofNullable(effectiveValue.getissues_Issue()).orElseGet(java.util.Collections::emptyList);
			
			source.clear();
			
			for (final de.ls5.dywa.generated.rest.types.Issue item : actual) {
				
				final de.ls5.dywa.generated.entity.onbroke.models.app.Issue entity;

				// create new
				if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_CREATE_NEW) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Issue)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					final java.lang.String dywaName;
					if (item.getDywaName() == null || item.getDywaName().isEmpty()) {
						dywaName = "issues";
					} else {
						dywaName = item.getDywaName();
					}
				
					final long id = IssueREST.create(dywaName);
					item.setDywaId(id);
				
					//update_IssueSelective
					this.IssueREST.update_IssueSelective(item);
					entity = this.IssueController.read(item.getDywaId());
				}
				// create transient
				else if (item.getDywaId() == info.scce.dime.util.Constants.DYWA_ID_TRANSIENT) {
					if (! (item instanceof de.ls5.dywa.generated.rest.types.Issue)) {
						throw new java.lang.IllegalArgumentException("Runtime type does not match model type");
					}
				
					entity = this.IssueREST.copyToTransient(item);
				}
				// lookup regular object
				else {
					//update_IssueSelective
					this.IssueREST.update_IssueSelective(item);
					entity = this.IssueController.read(item.getDywaId());
				}

				if (entity != null) {
					source.add(entity);
				}
			}
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.istitleSet()) {
			checkVersion(value, obj);
			effectiveObj.settitle(effectiveValue.gettitle());
		}
	}
		{
			final de.ls5.dywa.generated.rest.types.Submission effectiveValue = value;
			final de.ls5.dywa.generated.entity.onbroke.models.app.Submission effectiveObj = obj;

		// If values were not specified, ignore them
		if (effectiveValue.isuserCanDiscussSet()) {
			checkVersion(value, obj);
			effectiveObj.setuserCanDiscuss(effectiveValue.getuserCanDiscuss());
		}
	}
	}


	private void checkVersion(final de.ls5.dywa.generated.rest.types.Submission value, final de.ls5.dywa.generated.entity.onbroke.models.app.Submission obj) {
		if (value.isDywaVersionSet() && value.getDywaVersion() != obj.getDywaVersion()) {
			throw new javax.persistence.OptimisticLockException(obj.getDywaName() + '[' + obj.getDywaId() + "] has been updated by other transaction");
		}
	}
}
