// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIOutputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';

class AdminBiddingTable_QIJywVLmEe2djpkPxa2Z3QBranch extends ContinueProcessRequest {
	
	
	Show_bidding branch_Show_bidding;
	
	AdminBiddingTable_QIJywVLmEe2djpkPxa2Z3QBranch.forShow_biddingBranch(
{		Data.Bidding bidding:null
}	) {
		branch_Show_bidding = new Show_bidding();
		branch_Show_bidding.port_bidding = bidding;
	}
	Edit_bidding branch_Edit_bidding;
	
	AdminBiddingTable_QIJywVLmEe2djpkPxa2Z3QBranch.forEdit_biddingBranch(
{		Data.Bidding bidding:null
}	) {
		branch_Edit_bidding = new Edit_bidding();
		branch_Edit_bidding.port_bidding = bidding;
	}
	Delete_bidding branch_Delete_bidding;
	
	AdminBiddingTable_QIJywVLmEe2djpkPxa2Z3QBranch.forDelete_biddingBranch(
{		Data.Bidding bidding:null
}	) {
		branch_Delete_bidding = new Delete_bidding();
		branch_Delete_bidding.port_bidding = bidding;
	}

	String toJSON() {
		return jsonEncode(toJSOG());
	}
		
	Map<String,dynamic> toJSOG()
	{
		Map<String,dynamic> jsonObj = new Map();
		
		if(branch_Show_bidding!=null) {
			return branch_Show_bidding.toJSOG();
		}
		if(branch_Edit_bidding!=null) {
			return branch_Edit_bidding.toJSOG();
		}
		if(branch_Delete_bidding!=null) {
			return branch_Delete_bidding.toJSOG();
		}
		throw new Exception("Exhaustive IF AdminBiddingTable_QIJywVLmEe2djpkPxa2Z3QBranch.dart");
	}
}
	
	class Show_bidding {
		
		Data.Bidding port_bidding = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_bidding != null){
				jsonObj["bidding"] = this.port_bidding.toJSOG(cache);
			}
			else{
				jsonObj["bidding"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Edit_bidding {
		
		Data.Bidding port_bidding = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_bidding != null){
				jsonObj["bidding"] = this.port_bidding.toJSOG(cache);
			}
			else{
				jsonObj["bidding"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Delete_bidding {
		
		Data.Bidding port_bidding = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_bidding != null){
				jsonObj["bidding"] = this.port_bidding.toJSOG(cache);
			}
			else{
				jsonObj["bidding"] = null;
			}
					
			return jsonObj;
		}
		
	}
