// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIOutputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';

class DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch extends ContinueProcessRequest {
	
	
	Edit branch_Edit;
	
	DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch.forEditBranch(
{		Data.Comment comment:null
}	) {
		branch_Edit = new Edit();
		branch_Edit.port_comment = comment;
	}
	Delete branch_Delete;
	
	DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch.forDeleteBranch(
{		Data.Comment comment:null
}	) {
		branch_Delete = new Delete();
		branch_Delete.port_comment = comment;
	}
	Add_new_Comment branch_Add_new_Comment;
	
	DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch.forAdd_new_CommentBranch(
	) {
		branch_Add_new_Comment = new Add_new_Comment();
	}
	Back branch_Back;
	
	DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch.forBackBranch(
	) {
		branch_Back = new Back();
	}

	String toJSON() {
		return jsonEncode(toJSOG());
	}
		
	Map<String,dynamic> toJSOG()
	{
		Map<String,dynamic> jsonObj = new Map();
		
		if(branch_Edit!=null) {
			return branch_Edit.toJSOG();
		}
		if(branch_Delete!=null) {
			return branch_Delete.toJSOG();
		}
		if(branch_Add_new_Comment!=null) {
			return branch_Add_new_Comment.toJSOG();
		}
		if(branch_Back!=null) {
			return branch_Back.toJSOG();
		}
		throw new Exception("Exhaustive IF DetailsPage_HVzS0GAMEe2S6JM4Hx8SJwBranch.dart");
	}
}
	
	class Edit {
		
		Data.Comment port_comment = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_comment != null){
				jsonObj["comment"] = this.port_comment.toJSOG(cache);
			}
			else{
				jsonObj["comment"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Delete {
		
		Data.Comment port_comment = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_comment != null){
				jsonObj["comment"] = this.port_comment.toJSOG(cache);
			}
			else{
				jsonObj["comment"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Add_new_Comment {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
	class Back {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
