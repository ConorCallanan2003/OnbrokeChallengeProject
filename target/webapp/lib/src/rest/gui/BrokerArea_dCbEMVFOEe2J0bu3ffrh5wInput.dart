// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIInputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';

class BrokerArea_dCbEMVFOEe2J0bu3ffrh5wInput extends UserInteractionResponse {
	
	DIMEList<Data.Bidding> biddings = new DIMEList<Data.Bidding>();
	DIMEList<Data.Offer> offers = new DIMEList<Data.Offer>();
	DIMEList<Data.Offer> approvedOffers = new DIMEList<Data.Offer>();
	
	BrokerArea_dCbEMVFOEe2J0bu3ffrh5wInput(Map<String,dynamic> map, Map<String,dynamic> cache)
	{
		 Map<String,dynamic> inputPorts = map['inputs'];
		if(inputPorts.containsKey('approvedOffers')) {
			for(var entry in inputPorts['approvedOffers']) {
				approvedOffers.add(
					Data.Offer.fromJSOG(jsog:entry,cache:cache)
				);
			}
		}
		if(inputPorts.containsKey('biddings')) {
			for(var entry in inputPorts['biddings']) {
				biddings.add(
					Data.Bidding.fromJSOG(jsog:entry,cache:cache)
				);
			}
		}
		if(inputPorts.containsKey('offers')) {
			for(var entry in inputPorts['offers']) {
				offers.add(
					Data.Offer.fromJSOG(jsog:entry,cache:cache)
				);
			}
		}
	}
	
	@override
	bool startedByEvent() {
	    return false;
	}
	
	bool inpusChanged(BrokerArea_dCbEMVFOEe2J0bu3ffrh5wInput input) {
		return biddings != input.biddings || offers != input.offers || approvedOffers != input.approvedOffers;
	}
}
