// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIOutputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';

class OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch extends ContinueProcessRequest {
	
	
	Back branch_Back;
	
	OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.forBackBranch(
	) {
		branch_Back = new Back();
	}
	Show_issue branch_Show_issue;
	
	OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.forShow_issueBranch(
{		Data.Issue issue:null
}	) {
		branch_Show_issue = new Show_issue();
		branch_Show_issue.port_issue = issue;
	}
	Resolve_issue branch_Resolve_issue;
	
	OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.forResolve_issueBranch(
{		Data.Issue issue:null
}	) {
		branch_Resolve_issue = new Resolve_issue();
		branch_Resolve_issue.port_issue = issue;
	}
	Unresolve_issue branch_Unresolve_issue;
	
	OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.forUnresolve_issueBranch(
{		Data.Issue issue:null
}	) {
		branch_Unresolve_issue = new Unresolve_issue();
		branch_Unresolve_issue.port_issue = issue;
	}
	Create_issue branch_Create_issue;
	
	OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.forCreate_issueBranch(
	) {
		branch_Create_issue = new Create_issue();
	}

	String toJSON() {
		return jsonEncode(toJSOG());
	}
		
	Map<String,dynamic> toJSOG()
	{
		Map<String,dynamic> jsonObj = new Map();
		
		if(branch_Back!=null) {
			return branch_Back.toJSOG();
		}
		if(branch_Show_issue!=null) {
			return branch_Show_issue.toJSOG();
		}
		if(branch_Resolve_issue!=null) {
			return branch_Resolve_issue.toJSOG();
		}
		if(branch_Unresolve_issue!=null) {
			return branch_Unresolve_issue.toJSOG();
		}
		if(branch_Create_issue!=null) {
			return branch_Create_issue.toJSOG();
		}
		throw new Exception("Exhaustive IF OfferDetails_fcOIkVN8Ee2KQc5QIsW97wBranch.dart");
	}
}
	
	class Back {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
	class Show_issue {
		
		Data.Issue port_issue = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_issue != null){
				jsonObj["issue"] = this.port_issue.toJSOG(cache);
			}
			else{
				jsonObj["issue"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Resolve_issue {
		
		Data.Issue port_issue = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_issue != null){
				jsonObj["issue"] = this.port_issue.toJSOG(cache);
			}
			else{
				jsonObj["issue"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Unresolve_issue {
		
		Data.Issue port_issue = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_issue != null){
				jsonObj["issue"] = this.port_issue.toJSOG(cache);
			}
			else{
				jsonObj["issue"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Create_issue {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
