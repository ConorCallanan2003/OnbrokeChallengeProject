// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIOutputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';

class OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch extends ContinueProcessRequest {
	
	
	Cancel branch_Cancel;
	
	OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch.forCancelBranch(
	) {
		branch_Cancel = new Cancel();
	}
	Submit branch_Submit;
	
	OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch.forSubmitBranch(
{		DIMEList<Data.Feature> selectedFeatures:null,
		DIMEList<Data.Feature> selectedPreferences:null,
		String description:''
}	) {
		branch_Submit = new Submit();
		selectedFeatures = selectedFeatures==null?new DIMEList():selectedFeatures;
		branch_Submit.port_selectedFeatures = selectedFeatures;
		selectedPreferences = selectedPreferences==null?new DIMEList():selectedPreferences;
		branch_Submit.port_selectedPreferences = selectedPreferences;
		branch_Submit.port_description = description;
	}
	Create_new_feature branch_Create_new_feature;
	
	OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch.forCreate_new_featureBranch(
	) {
		branch_Create_new_feature = new Create_new_feature();
	}
	Create_new_preference branch_Create_new_preference;
	
	OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch.forCreate_new_preferenceBranch(
	) {
		branch_Create_new_preference = new Create_new_preference();
	}

	String toJSON() {
		return jsonEncode(toJSOG());
	}
		
	Map<String,dynamic> toJSOG()
	{
		Map<String,dynamic> jsonObj = new Map();
		
		if(branch_Cancel!=null) {
			return branch_Cancel.toJSOG();
		}
		if(branch_Submit!=null) {
			return branch_Submit.toJSOG();
		}
		if(branch_Create_new_feature!=null) {
			return branch_Create_new_feature.toJSOG();
		}
		if(branch_Create_new_preference!=null) {
			return branch_Create_new_preference.toJSOG();
		}
		throw new Exception("Exhaustive IF OfferAeraEdit_kAL7QXfUEe2cGd7_OEEukwBranch.dart");
	}
}
	
	class Cancel {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
	class Submit {
		
		DIMEList<Data.Feature> port_selectedFeatures = new DIMEList();
		DIMEList<Data.Feature> port_selectedPreferences = new DIMEList();
		String port_description = '';

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_selectedFeatures.isEmpty){
				jsonObj["selectedFeatures"] = [];
			}
			else{
				jsonObj["selectedFeatures"] = 
				this.port_selectedFeatures.map((n)=>n.toJSOG(cache)).toList();
			}
			if(this.port_selectedPreferences.isEmpty){
				jsonObj["selectedPreferences"] = [];
			}
			else{
				jsonObj["selectedPreferences"] = 
				this.port_selectedPreferences.map((n)=>n.toJSOG(cache)).toList();
			}
			jsonObj["description"] = this.port_description;
					
			return jsonObj;
		}
		
	}
	class Create_new_feature {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
	class Create_new_preference {
		

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
					
			return jsonObj;
		}
		
	}
