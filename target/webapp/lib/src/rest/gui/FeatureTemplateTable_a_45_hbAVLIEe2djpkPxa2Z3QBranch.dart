// generated by info.scce.dime.generator.gui.rest.DartTOGeneratorHelper#generateGUIOutputsDart

import 'dart:convert';
import 'package:app/src/models/Selectives.dart';
import 'package:app/src/data/Data.dart' as Data;
import 'package:app/src/models/FileReference.dart';
import 'package:app/src/core/dime_process_service.dart';

class FeatureTemplateTable_a_45_hbAVLIEe2djpkPxa2Z3QBranch extends ContinueProcessRequest {
	
	
	Edit_feature branch_Edit_feature;
	
	FeatureTemplateTable_a_45_hbAVLIEe2djpkPxa2Z3QBranch.forEdit_featureBranch(
{		Data.Feature feature:null
}	) {
		branch_Edit_feature = new Edit_feature();
		branch_Edit_feature.port_feature = feature;
	}
	Delete_feature branch_Delete_feature;
	
	FeatureTemplateTable_a_45_hbAVLIEe2djpkPxa2Z3QBranch.forDelete_featureBranch(
{		Data.Feature feature:null
}	) {
		branch_Delete_feature = new Delete_feature();
		branch_Delete_feature.port_feature = feature;
	}
	Details branch_Details;
	
	FeatureTemplateTable_a_45_hbAVLIEe2djpkPxa2Z3QBranch.forDetailsBranch(
{		Data.Feature feature:null
}	) {
		branch_Details = new Details();
		branch_Details.port_feature = feature;
	}

	String toJSON() {
		return jsonEncode(toJSOG());
	}
		
	Map<String,dynamic> toJSOG()
	{
		Map<String,dynamic> jsonObj = new Map();
		
		if(branch_Edit_feature!=null) {
			return branch_Edit_feature.toJSOG();
		}
		if(branch_Delete_feature!=null) {
			return branch_Delete_feature.toJSOG();
		}
		if(branch_Details!=null) {
			return branch_Details.toJSOG();
		}
		throw new Exception("Exhaustive IF FeatureTemplateTable_a_45_hbAVLIEe2djpkPxa2Z3QBranch.dart");
	}
}
	
	class Edit_feature {
		
		Data.Feature port_feature = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_feature != null){
				jsonObj["feature"] = this.port_feature.toJSOG(cache);
			}
			else{
				jsonObj["feature"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Delete_feature {
		
		Data.Feature port_feature = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_feature != null){
				jsonObj["feature"] = this.port_feature.toJSOG(cache);
			}
			else{
				jsonObj["feature"] = null;
			}
					
			return jsonObj;
		}
		
	}
	class Details {
		
		Data.Feature port_feature = null;

		Map<String,dynamic> toJSOG()
		{
			
			Map<String,dynamic> jsonObj = new Map();
Map<Object,dynamic> cache = new Map();			if(this.port_feature != null){
				jsonObj["feature"] = this.port_feature.toJSOG(cache);
			}
			else{
				jsonObj["feature"] = null;
			}
					
			return jsonObj;
		}
		
	}
